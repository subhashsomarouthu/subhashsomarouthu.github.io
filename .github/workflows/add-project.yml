name: Nightly Portfolio Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  update-portfolio:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Discover and add new repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_USER: ${{ github.repository_owner }}
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

          echo "Fetching existing projects from _data/projects.yml..."
          yq e '.[] | .github_url' _data/projects.yml > existing_projects.txt
          
          echo "Fetching all public repositories for user ${GH_USER}..."
          gh repo list ${GH_USER} --visibility=public --json url --jq '.[] | .url' > all_public_repos.txt

          changes_made=false
          echo "Comparing lists to find new projects..."

          while read repo_url; do
            if ! grep -q "$repo_url" existing_projects.txt; then
              echo "Found new repository: $repo_url"
              
              cover_image_path=""
              if gh api repos/${GH_USER}/$(basename $repo_url)/contents/portfolio-cover.png -q ".name" &> /dev/null; then
                cover_image_path="https://raw.githubusercontent.com/${GH_USER}/$(basename $repo_url)/main/portfolio-cover.png"
              elif gh api repos/${GH_USER}/$(basename $repo_url)/contents/portfolio-cover.jpg -q ".name" &> /dev/null; then
                cover_image_path="https://raw.githubusercontent.com/${GH_USER}/$(basename $repo_url)/main/portfolio-cover.jpg"
              fi

              if [ -n "$cover_image_path" ]; then
                echo "Found cover image: $cover_image_path"
                changes_made=true
                
                repo_details=$(gh repo view $repo_url --json name,description,url,repositoryTopics)
                
                repo_name=$(echo "$repo_details" | jq -r '.name')
                repo_desc=$(echo "$repo_details" | jq -r 'if .description and .description != "" then .description else "No description provided." end')
                repo_url_val=$(echo "$repo_details" | jq -r '.url')
                repo_topics=$(echo "$repo_details" | jq -r '(if .repositoryTopics | has("nodes") then .repositoryTopics.nodes else .repositoryTopics end // []) | map("- " + .topic.name) | .[]')

                new_entry=$(cat <<EOF

- name: "${repo_name}"
  image: "${cover_image_path}"
  description: "${repo_desc}"
  github_url: "${repo_url_val}"
  demo_url: ""
  tech:
$(echo "${repo_topics}" | sed 's/^/    /')
EOF
)
                echo "${new_entry}" >> _data/projects.yml
                echo "Added ${repo_url} to _data/projects.yml"
              else
                echo "Skipping ${repo_url}, no portfolio-cover image found."
              fi
            fi
          done < all_public_repos.txt

          if [ "$changes_made" = true ]; then
            echo "Changes were made. Proceeding to commit."
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No new projects to add. Exiting."
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
        id: discover

      - name: Commit and push if files changed
        if: steps.discover.outputs.changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: Automatically add new projects to portfolio"
          file_pattern: _data/projects.yml
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions@github.com"